# 

#Measured rtt with 5000 queue size is 0.0195
#queue length: 
#     B ¬ (0.0195 * 12500000)/500

[General]
network = Simulation5
tkenv-plugin-path = ../../../etc/plugins
#record-eventlog = true

**.cli_NSSL[*].numTcpApps = 3
**.cli_NSSL[*].tcpApp[*].typename = "TCPSessionApp"
**.cli_NSSL[*].tcpApp[*].active = true
**.cli_NSSL[*].tcpApp[*].localAddress = ""
**.cli_NSSL[*].tcpApp[*].localPort = -1
**.cli_NSSL[*].tcpApp[*].connectPort = 1000
**.cli_NSSL[*].tcpApp[*].tOpen = exponential(0.0001s)
**.cli_NSSL[*].tcpApp[*].tSend = 0s
**.cli_NSSL[*].tcpApp[*].sendBytes = 0
**.cli_NSSL[*].tcpApp[0].sendScript = "0.5 200000; 1 1000000; 2 40000000; 3 5000000; " 
**.cli_NSSL[*].tcpApp[1].sendScript = "1 100000; 1.2 1000000; 2 2000000; 2.5 4000000; 3 4000000; " 
**.cli_NSSL[*].tcpApp[2].sendScript = "1 100000; 1.2 1000000; 2 2000000; 2.5 4000000; 3 4000000; " 
**.cli_NSSL[*].tcpApp[*].tClose = 0s
**.cli_NSSL[*].tcpApp[0].connectAddress = "google_srv"
**.cli_NSSL[0].tcpApp[1].connectAddress = "cli_VLSIb[0]"
**.cli_NSSL[1].tcpApp[1].connectAddress = "cli_VLSIb[1]"
**.cli_NSSL[2].tcpApp[1].connectAddress = "cli_VLSIb[2]"
**.cli_NSSL[3].tcpApp[1].connectAddress = "cli_VLSIb[3]"
**.cli_NSSL[0].tcpApp[2].connectAddress = "cli_MIT_TCE[0]"
**.cli_NSSL[1].tcpApp[2].connectAddress = "cli_MIT_TCE[1]"
**.cli_NSSL[2].tcpApp[2].connectAddress = "cli_MIT_TCE[2]"
**.cli_NSSL[3].tcpApp[2].connectAddress = "cli_MIT_TCE[0]"

**.cli_VLSIa[*].numTcpApps = 2
**.cli_VLSIa[*].tcpApp[*].typename = "TCPSessionApp"
**.cli_VLSIa[*].tcpApp[*].active = true
**.cli_VLSIa[*].tcpApp[*].localAddress = ""
**.cli_VLSIa[*].tcpApp[*].localPort = -1
**.cli_VLSIa[*].tcpApp[*].connectPort = 1000
**.cli_VLSIa[*].tcpApp[*].tOpen = exponential(0.00005s)
**.cli_VLSIa[*].tcpApp[*].tSend = 0s
**.cli_VLSIa[*].tcpApp[*].sendBytes = 0MiB
**.cli_VLSIa[*].tcpApp[0].sendScript = "0.1 100000; 0.5 100000; 2 1000000; 3 2000000; 5 4000000" 
**.cli_VLSIa[*].tcpApp[1].sendScript = "0.3 100000; 0.9 100000; 3 1000000; 5 2000000;" 
**.cli_VLSIa[*].tcpApp[*].tClose = 0s
**.cli_VLSIa[*].tcpApp[0].connectAddress = "amazon_srv"
**.cli_VLSIa[0].tcpApp[1].connectAddress = "cli_VLSIb[0]"
**.cli_VLSIa[1].tcpApp[1].connectAddress = "cli_VLSIb[1]"
**.cli_VLSIa[2].tcpApp[1].connectAddress = "cli_VLSIb[2]"
**.cli_VLSIa[3].tcpApp[1].connectAddress = "cli_VLSIb[3]"

**.cli_VLSIb[*].numTcpApps = 2
**.cli_VLSIb[*].tcpApp[0].typename = "TCPSessionApp"
**.cli_VLSIb[*].tcpApp[0].active = true
**.cli_VLSIb[*].tcpApp[0].localAddress = ""
**.cli_VLSIb[*].tcpApp[0].localPort = -1
**.cli_VLSIb[*].tcpApp[0].connectPort = 1000
**.cli_VLSIb[*].tcpApp[0].tOpen = exponential(0.0000005s)
**.cli_VLSIb[*].tcpApp[0].tSend = 0s
**.cli_VLSIb[*].tcpApp[0].sendBytes = 0MiB
**.cli_VLSIb[*].tcpApp[0].sendScript = "0.5 100000; 1.2 4000000; 3 7000000; 5 1000000"
**.cli_VLSIb[*].tcpApp[0].tClose = 0s
**.cli_VLSIb[*].tcpApp[0].connectAddress = "amazon_srv"
**.cli_VLSIb[*].tcpApp[1].typename = "TCPSinkApp"
**.cli_VLSIb[*].tcpApp[1].localAddress = ""
**.cli_VLSIb[*].tcpApp[1].localPort = 1000

**.cli_Technion_TCE[*].numTcpApps = 3
**.cli_Technion_TCE[*].tcpApp[*].typename = "TCPSessionApp"
**.cli_Technion_TCE[*].tcpApp[*].active = true
**.cli_Technion_TCE[*].tcpApp[*].localAddress = ""
**.cli_Technion_TCE[*].tcpApp[*].localPort = -1
**.cli_Technion_TCE[*].tcpApp[*].connectPort = 1000
**.cli_Technion_TCE[*].tcpApp[*].tOpen = exponential(0.0000002s)
**.cli_Technion_TCE[*].tcpApp[*].tSend = 0s
**.cli_Technion_TCE[*].tcpApp[*].sendBytes = 0
**.cli_Technion_TCE[*].tcpApp[*].tClose = 0s
**.cli_Technion_TCE[*].tcpApp[*].sendScript = "1 3000000; 2 1000000; 2.5 1000000; 3 1000000"
**.cli_Technion_TCE[*].tcpApp[1].connectAddress = "google_srv"
**.cli_Technion_TCE[0].tcpApp[0].connectAddress = "cli_MIT_TCE[0]"
**.cli_Technion_TCE[1].tcpApp[0].connectAddress = "cli_MIT_TCE[1]"
**.cli_Technion_TCE[2].tcpApp[0].connectAddress = "cli_MIT_TCE[2]"
**.cli_Technion_TCE[0].tcpApp[2].connectAddress = "cli_VLSIb[0]"
**.cli_Technion_TCE[1].tcpApp[2].connectAddress = "cli_VLSIb[1]"
**.cli_Technion_TCE[2].tcpApp[2].connectAddress = "cli_VLSIb[2]"

**.cli_MIT_TCE[*].numTcpApps = 1
**.cli_MIT_TCE[*].tcpApp[0].typename = "TCPSinkApp"
**.cli_MIT_TCE[*].tcpApp[0].localAddress = ""
**.cli_MIT_TCE[*].tcpApp[0].localPort = 1000



**.amazon_srv.numTcpApps = 1
**.amazon_srv.tcpApp[*].typename = "TCPSinkApp"
**.amazon_srv.tcpApp[0].localAddress = ""
**.amazon_srv.tcpApp[0].localPort = 1000
#
**.google_srv.numTcpApps = 1
**.google_srv.tcpApp[*].typename = "TCPSinkApp"
**.google_srv.tcpApp[0].localAddress = ""
**.google_srv.tcpApp[0].localPort = 1000

#**.google_srv.tcp.ecnWillingness = true
#**.amazon_srv.tcp.ecnWillingness = true
#**.cli_Technion_TCE[*].tcp.ecnWillingness = true
#**.cli_MIT_TCE[*].tcp.ecnWillingness = true
#**.cli_NSSL[*].tcp.ecnWillingness = true
#**.cli_VLSIa[*].tcp.ecnWillingness = true
#**.cli_VLSIb[*].tcp.ecnWillingness = true

**.tcpApp[*].dataTransferMode = "object"

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.rte_faculty[3].ppp[*].queue.frameCapacity = 150 
**.rte_faculty[2].ppp[*].queue.frameCapacity = 150
**.rte_faculty[1].ppp[*].queue.frameCapacity = 80 
**.rte_faculty[0].ppp[*].queue.frameCapacity = 80 
**.rte_VLSI[0].ppp[*].queue.frameCapacity = 80  
**.ppp[*].queue.frameCapacity = 20 

**.rte_faculty[3].networkLayer.ip.ecnQLengthThrsh = 130
**.rte_faculty[2].networkLayer.ip.ecnQLengthThrsh = 130
**.rte_faculty[1].networkLayer.ip.ecnQLengthThrsh = 65
**.rte_faculty[0].networkLayer.ip.ecnQLengthThrsh = 65
**.rte_VLSI[0].networkLayer.ip.ecnQLengthThrsh = 65
**.**.networkLayer.ip.ecnQLengthThrsh = 15
**.**..networkLayer.ip.ecnAvgeragningInterval = 0.001

**.tcp.advertisedWindow       = 5000000
#**.tcp.mss                    = 1452
**.tcp.tcpAlgorithmClass      = "TCPReno"
#**.tcp.sackSupport            = true
#**.tcp.timestampSupport       = true
**.tcp.windowScalingSupport   = true
#**.tcp.delayedAcksEnabled     = true
#**.tcp.limitedTransmitEnabled = true
#**.tcp.increasedIWEnabled     = false

*.visualizer.*.packetDropVisualizer.displayPacketDrops = true
*.visualizer.*.packetDropVisualizer.labelFormat = "%n/reason: %r"
*.visualizer.*.packetDropVisualizer.fadeOutTime = 3s